#!/usr/bin/env bash
[ -z "$DEBUG" ] || set -x
set -e

[ -z "$KUBECONFIG" ] && echo "Provision requires an explicit KUBECONFIG env" && exit 1

[ -z "$VM_NAME" ] && VM_NAME="ystack-master"
[ -z "$VM_RESOURCES" ] && VM_RESOURCES="-m 8G -d 40G -c 4"

if ! multipass info "$VM_NAME" 2>/dev/null
then
  multipass launch -n "$VM_NAME" $VM_RESOURCES
fi

# https://medium.com/@mattiaperi/kubernetes-cluster-with-k3s-and-multipass-7532361affa3
K3S_NODEIP_MASTER="$(multipass info $VM_NAME | grep "IPv4" | awk -F' ' '{print $2}')"

echo "# VM_NAME=\"$VM_NAME\" found. The rest of this script runs inside the VM."

multipass exec "$VM_NAME" -- sudo bash -cex "$(cat $YSTACK_HOME/bin/y-ubuntu-swapoff)";
multipass exec "$VM_NAME" -- sudo bash -cex "$(cat $YSTACK_HOME/bin/y-k3s-install)";

multipass exec "$VM_NAME" -- sudo cat /etc/rancher/k3s/k3s.yaml \
  | sed "s|127.0.0.1|$K3S_NODEIP_MASTER|" \
  > "$KUBECONFIG.tmp"

KUBECONFIG="$KUBECONFIG.tmp" kubectl config rename-context default local

KUBECONFIG="$KUBECONFIG.tmp" kubectl create namespace ystack

#KUBECONFIG="$KUBECONFIG.tmp" kubectl apply -k $YSTACK_HOME/metrics-server

KUBECONFIG="$KUBECONFIG.tmp" y-cluster-install-prometheus-operator

y-kubeconfig-import "$KUBECONFIG.tmp"

echo "# Done. Master IP: $K3S_NODEIP_MASTER. The cluster should be ready for y-stack converge now."
