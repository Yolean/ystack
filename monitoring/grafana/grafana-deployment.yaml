apiVersion: apps/v1
kind: Deployment
metadata:
  name: grafana
spec:
  replicas: 1
  selector:
    matchLabels:
      app: grafana
  template:
    metadata:
      labels:
        app: grafana
    spec:
      securityContext:
        fsGroup: 472
        runAsUser: 472
      containers:
      - name: grafana
        image: grafana/grafana
        env:
        # Has to be a kustomization
        # - name: GF_SERVER_ROOT_URL
        #   value: https://demo-grafana.com
        - name: GF_PATHS_DATA
          value: /data
        - name: GF_PATHS_PLUGINS
          value: /data/plugins
        - name: GF_PATHS_PROVISIONING
          value: /provisioning
        - name: GF_SECURITY_ALLOW_EMBEDDING
          value: "true"
        # - name: GF_SECURITY_ADMIN_PASSWORD
        #   valueFrom:
        #     secretKeyRef:
        #       key: admin-password
        #       name: grafana-secrets
        - name: GF_USERS_AUTO_ASSIGN_ORG_ROLE
          value: "Admin"
        - name: GF_USERS_ALLOW_SIGN_UP
          value: "false"
        - name: GF_USERS_ALLOW_ORG_CREATE
          value: "false"
        - name: GF_AUTH_DISABLE_LOGIN_FORM
          value: "true"
        - name: GF_AUTH_ANONYMOUS_ENABLED
          value: "true"
        - name: GF_AUTH_ANONYMOUS_ORG_ROLE
          value: "Admin"
        - name: GF_ANALYTICS_REPORTING_ENABLED
          value: "false"
        - name: GF_ALERTING_ENABLED
          value: "false"
        - name: GF_SMTP_ENABLED
          value: "false"
        - name: GF_LOG_MODE
          value: console
        - name: GF_INSTALL_PLUGINS
          value: grafana-image-renderer,grafana-piechart-panel,grafana-clock-panel
        - name: GF_SERVER_ENABLE_GZIP
          value: "true"
        - name: GF_METRICS_ENABLED
          value: "true"
        - name: GF_EXPLORE_ENABLED
          value: "true"
        - name: GF_RENDERING_SERVER_URL
          value: http://127.0.0.1:8081/render
        - name: GF_RENDERING_CALLBACK_URL
          value: http://127.0.0.1:3000/
        ports:
        - containerPort: 3000
          name: web
          protocol: TCP
        resources:
          requests:
            cpu: "0"
            memory: 100Mi
          limits:
            memory: 1000Mi
        livenessProbe:
          httpGet:
            path: /api/health
            port: web
            scheme: HTTP
        readinessProbe:
          httpGet:
            path: /api/health
            port: web
            scheme: HTTP
        volumeMounts:
        - mountPath: /data
          name: data
        - mountPath: /provisioning/datasources
          name: provisioning-datasources
        - mountPath: /provisioning/dashboards
          name: provisioning-dashboards
        - mountPath: /provisioning/plugins
          name: provisioning-plugins
        - mountPath: /dashboards
          name: dashboards
        - mountPath: /dashboards/kubernetes-mixin
          name: kubernetes-mixin-grafana-dashboards
      # renderer should be a separate deployment to allow scale out, but so far we're just testing it
      - name: renderer
        image: grafana/grafana-image-renderer
        env:
        - name: ENABLE_METRICS
          value: "true"
        ports:
        - containerPort: 8081
          name: renderer
          protocol: TCP
      - name: git-sync
        image: k8s.gcr.io/git-sync/git-sync:v3.2.2@sha256:6a543fb2d1e92008aad697da2672478dcfac715e3dddd33801d772da6e70cf24
        env:
        - name: GIT_SYNC_REPO
          value: "https://github.com/Yolean/grafana-dashboards"
        - name: GIT_SYNC_DEST
          value: "repo"
        - name: GIT_SYNC_ROOT
          value: "/dashboards/imported"
        - name: GIT_SYNC_WAIT
          value: "2147483647"
        resources:
          limits:
            cpu: 10m
            memory: 20Mi
        volumeMounts:
        - mountPath: /dashboards
          name: dashboards
      volumes:
      - name: data
        emptyDir: {}
      - name: provisioning-datasources
        configMap:
          name: grafana-provisioning-datasources
      - name: provisioning-dashboards
        configMap:
          name: grafana-provisioning-dashboards
      - name: provisioning-plugins
        configMap:
          name: grafana-provisioning-plugins
          optional: true
      - name: dashboards
        emptyDir: {}
      - name: kubernetes-mixin-grafana-dashboards
        configMap:
          name: kubernetes-mixin-grafana-dashboards
          optional: true
