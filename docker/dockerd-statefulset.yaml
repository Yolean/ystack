apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: dockerd
spec:
  selector:
    matchLabels:
      app: dockerd
  serviceName: "dockerd"
  replicas: 1 # Can't be scaled up because legacy build caching requires a volume. Use buildkitd instead.
  template:
    metadata:
      labels:
        app: dockerd
        storage-driver: overlay2
      annotations:
        container.apparmor.security.beta.kubernetes.io/dockerd: unconfined
    spec:
      terminationGracePeriodSeconds: 25
      securityContext:
        seccompProfile:
          type: Unconfined
        fsGroup: 1000
      initContainers:
      - name: setup
        image: busybox:1
        securityContext:
          runAsUser: 0
        volumeMounts:
        - name: etc-docker-config
          mountPath: /home/rootless/docker-config
        - name: etc-docker
          mountPath: /home/rootless/.config/docker
        - name: build-cache
          # only works for ubuntu-flavored kernel, see https://docs.docker.com/engine/security/rootless/#known-limitations
          # on for example k3d you get vfs
          mountPath: /home/rootless/.local/share/docker/overlay2
        - name: var-lib-docker
          mountPath: /home/rootless/.local/share/docker
        env:
        - name: SHARE
          value: /home/rootless/.local/share/docker
        - name: STORAGE_DRIVER
          valueFrom:
            fieldRef:
              fieldPath: metadata.labels['storage-driver']
        command:
        - /bin/sh
        - -cex
        - |
          # https://github.com/docker/docker-ce/blob/ce5b02683e83ec9aa89927a9ce5d276787cc8823/components/engine/daemon/graphdriver/overlay2/overlay.go#L148
          # but we want a single volume mount that preserves build cache only
          [ -d $SHARE/$STORAGE_DRIVER/var-lib-docker-image ] || mkdir $SHARE/$STORAGE_DRIVER/var-lib-docker-image
          [ -e $SHARE/image ] || ln -s $SHARE/$STORAGE_DRIVER/var-lib-docker-image $SHARE/image
          chown 1000 /home/rootless/.local/share/docker /home/rootless/.local/share/docker/$STORAGE_DRIVER /home/rootless/.local/share/docker/image
          cp /home/rootless/docker-config/* /home/rootless/.config/docker/
      containers:
      - name: dockerd
        image: docker:dind-rootless
        securityContext:
          runAsUser: 1000
          runAsGroup: 1000
          privileged: true
        env:
        - name: DOCKERD_ROOTLESS_ROOTLESSKIT_FLAGS
          value: "-p 0.0.0.0:2376:2376/tcp"
        - name: STORAGE_DRIVER
          valueFrom:
            fieldRef:
              fieldPath: metadata.labels['storage-driver']
        args:
        - dockerd
        - -s
        - $(STORAGE_DRIVER)
        lifecycle:
          preStop:
            exec:
              command:
              - /bin/sh
              - -c
              - |
                kill 1
                sleep 10
        ports:
        - containerPort: 2376
          name: docker-tcp
        volumeMounts:
        - name: etc-docker
          mountPath: /home/rootless/.config/docker
        - name: build-cache
          mountPath: /home/rootless/.local/share/docker/overlay2
        - name: var-lib-docker
          mountPath: /home/rootless/.local/share/docker
      volumes:
      - name: etc-docker-config
        configMap:
          name: etc-docker
      - name: etc-docker
        emptyDir: {}
      - name: var-lib-docker
        # We want to avoid persistent container state
        emptyDir: {}
  volumeClaimTemplates:
  - metadata:
      name: build-cache
    spec:
      accessModes: [ "ReadWriteOnce" ]
      resources:
        requests:
          storage: 1Gi
